@use 'sass:list';
@use 'sass:map';
@use '../../../tokens';

@mixin theme($tokens) {
    $supported-tokens: tokens.$md-comp-plain-tooltip-supported-tokens;

    @each $token, $value in $tokens {
        @if list.index($supported-tokens, $token)==null {
            @error 'Token `#{$token}` is not a supported token.';
        }

        @if $value {
            --md-plain-tooltip-#{$token}: #{$value};
        }
    }
}

@mixin styles() {
    $tokens: tokens.md-comp-plain-tooltip-values();

    @layer mdc-tooltip-component {

        & {
            // Only use the logical properties.
            $tokens: map.remove($tokens, 'container-shape');

            @each $token, $value in $tokens {
                --_#{$token}: #{$value};
            }
        }

        & {
            all: unset;
            display: none;
            position: relative;
            border-start-start-radius: var(--_container-shape-start-start);
            border-start-end-radius: var(--_container-shape-start-end);
            border-end-start-radius: var(--_container-shape-end-start);
            border-end-end-radius: var(--_container-shape-end-end);
            height: fit-content;
            width: fit-content;
            background: var(--_container-color);
            min-height: 24px;
            padding-left: 8px;
            padding-right: 8px;
            margin: 0;

            &[visible] {
                display: block;
            }
        }
        
        & .supporting-text {
            vertical-align: middle;
            display: inline-block;
            color: var(--_supporting-text-color);
            font: var(--_supporting-text-font);
            line-height: var(--_supporting-text-line-height);
            size: var(--_supporting-text-size);
            font-weight: var(--_supporting-text-weight);
            letter-spacing: var(--_supporting-text-tracking);
        }

    }

}
