//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use '../../../theme';
@use '../../../tokens';

@mixin styles() {
    $tokens: tokens.md-comp-icon-button-values();

    & {
        // Only use the logical properties.
        $tokens: map.remove($tokens, 'container-shape');

        @each $token, $value in $tokens {
            --_#{$token}: #{$value};
        }

        @include theme.md-comp-ripple-theme(
            (
                hover-color: var(--_hover-state-layer-color),
                hover-opacity: var(--_hover-state-layer-opacity),
                pressed-color: var(--_pressed-state-layer-color),
                pressed-opacity: var(--_pressed-state-layer-opacity),
            )
        );
    }

    &[touch-target='wrapper'] {
        margin: max(0px, (48px - var(--_state-layer-height))/2) max(0px, (48px - var(--_state-layer-width))/2);
    }

    & {
        color: var(--_icon-color);

        &:hover {
            color: var(--_hover-icon-color);
        }

        &:focus {
            color: var(--_focus-icon-color);
        }

        &:active {
            color: var(--_pressed-icon-color);
        }

        &:is(:disabled, .disabled, [disabled]) {
            color: var(--_disabled-icon-color);
        }
    }

    & .background {
        background-color: transparent;
        border-radius: inherit;
        inset: 0;
        position: absolute;
        z-index: -1;
    }

    &:is(:disabled, .disabled, [disabled]) .icon {
        opacity: var(--_disabled-icon-opacity);
    }

    &.selected {
        &:not(.disabled),
        &:not(:disabled) {
            color: var(--_selected-icon-color);

            &:hover {
                color: var(--_selected-hover-icon-color);
            }

            &:focus {
                color: var(--_selected-focus-icon-color);
            }

            &:active {
                color: var(--_selected-pressed-icon-color);
            }
        }

        @include theme.md-comp-ripple-theme(
            (
                hover-color: var(--_selected-hover-state-layer-color),
                hover-opacity: var(--_selected-hover-state-layer-opacity),
                pressed-color: var(--_selected-pressed-state-layer-color),
                pressed-opacity: var(--_selected-pressed-state-layer-opacity),
            )
        );
    }
}
