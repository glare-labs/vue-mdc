@use 'sass:map';
@use '../../../tokens';

@mixin styles() {
    $tokens: tokens.md-comp-outlined-button-values();

    & {
        // Only use the logical properties.
        $tokens: map.remove($tokens, 'container-shape');

        @each $token, $value in $tokens {
            --_#{$token}: #{$value};
        }

        --_container-color: none;
        --_disabled-container-color: none;
        --_disabled-container-opacity: 0;
    }

    & .outline {
        inset: 0;
        border-style: solid;
        position: absolute;
        box-sizing: border-box;
        border-color: var(--_outline-color);
        border-radius: inherit;
    }

    &:active .outline {
        border-color: var(--_pressed-outline-color);
    }

    &[disabled] .outline {
        border-color: var(--_disabled-outline-color);
        opacity: var(--_disabled-outline-opacity);
    }

    @media (forced-colors: active) {
        &[disabled] .background {
            // Only outlined buttons change their border when disabled to distinmdish
            // them from other buttons that add a border for increased visibility in
            // HCM.
            border-color: GrayText;
        }

        &[disabled] .outline {
            opacity: 1;
        }
    }

    & .outline,
    & [data-component='ripple'] {
        border-width: var(--_outline-width);
    }

    & [data-component='ripple'] {
        inline-size: calc(100% - 2 * var(--_outline-width));
        block-size: calc(100% - 2 * var(--_outline-width));
        border-style: solid;
        border-color: transparent;
    }
}
