@use 'sass:list';
@use 'sass:map';
@use '../../../tokens';
@use '../../fab/styles/fab';

@mixin theme($tokens) {
    $supported-tokens: tokens.$md-comp-bottom-app-bar-supported-tokens;

    @each $token, $value in $tokens {
        @if list.index($supported-tokens, $token)==null {
            @error 'Token `#{$token}` is not a supported token.';
        }

        @if $value {
            --md-bottom-app-bar-#{$token}: #{$value};
        }
    }
}

@mixin styles() {
    $tokens: tokens.md-comp-bottom-app-bar-values();
 
    @layer mdc-bottom-app-bar-component {

        & {
            @each $token, $value in $tokens {
                --_#{$token}: #{$value};
            }
        }


        & {
            all: unset;
            display: block;
            position: relative;
            border-start-start-radius: var(--_container-shape-start-start);
            border-start-end-radius: var(--_container-shape-start-end);
            border-end-start-radius: var(--_container-shape-end-start);
            border-end-end-radius: var(--_container-shape-end-end);
            height: var(--_container-height);
            width: 100%;
        }

        &>dialog.dialog {
            all: unset;
            position: absolute;
            inset-block-start: 0;
            inset-block-end: 0;
            inset-inline-start: 0;
            inline-size: 0;
            box-sizing: border-box;
            display: none;
            justify-content: center;
            background: transparent;
            border: none;
            border-radius: inherit;
            flex-direction: column;
            margin: inherit;
            outline: none;
            overflow: visible;
            padding: 0;
            height: inherit;
            width: inherit;

            &[open] {
                display: flex;
            }
        }

        & .content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 12px;
            padding-bottom: 12px;
            padding-left: 4px;
            padding-right: 16px;
            z-index: 1;
        }

        & .background {
            display: block;
            position: absolute;
            inset: 0;
            border-radius: inherit;
            background-color: var(--_container-color);
        }

        & .leading-icons {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            position: relative;

            &>[data-component="icon-button"] {

            }
        }

        & .fab {
            @include fab.theme(
                (
                    'container-elevation': map.get($tokens, 'container-elevation'),
                    'hover-container-elevation': map.get($tokens, 'container-elevation'),
                    'focus-container-elevation': map.get($tokens, 'container-elevation'),
                    'pressed-container-elevation': map.get($tokens, 'container-elevation'),
                    'lowered-container-elevation': map.get($tokens, 'container-elevation'),
                    'lowered-hover-container-elevation': map.get($tokens, 'container-elevation'),
                    'lowered-focus-container-elevation': map.get($tokens, 'container-elevation'),
                    'lowered-pressed-container-elevation': map.get($tokens, 'container-elevation'),
                ),
            );
        }
    }
}
